<?php
/**
 * THIS IS AN AUTOGENERATED FILE
 * DO NOT MODIFY
 * @codingStandardsIgnoreFile
 */


namespace Ls\Omni\Client\Ecommerce\Entity;

use Ls\Omni\Client\Ecommerce\Entity\Enum\StoreHourType;
use Ls\Omni\Client\Ecommerce\Entity\Enum\StoreHourOpeningType;
use Ls\Omni\Exception\InvalidEnumException;

class StoreHours
{

    /**
     * @property int $DayOfWeek
     */
    protected $DayOfWeek = null;

    /**
     * @property string $Description
     */
    protected $Description = null;

    /**
     * @property string $EndDate
     */
    protected $EndDate = null;

    /**
     * @property string $NameOfDay
     */
    protected $NameOfDay = null;

    /**
     * @property string $OpenFrom
     */
    protected $OpenFrom = null;

    /**
     * @property string $OpenTo
     */
    protected $OpenTo = null;

    /**
     * @property string $StartDate
     */
    protected $StartDate = null;

    /**
     * @property StoreHourType $StoreHourtype
     */
    protected $StoreHourtype = null;

    /**
     * @property string $StoreId
     */
    protected $StoreId = null;

    /**
     * @property StoreHourOpeningType $Type
     */
    protected $Type = null;

    /**
     * @param int $DayOfWeek
     * @return $this
     */
    public function setDayOfWeek($DayOfWeek)
    {
        $this->DayOfWeek = $DayOfWeek;
        return $this;
    }

    /**
     * @return int
     */
    public function getDayOfWeek()
    {
        return $this->DayOfWeek;
    }

    /**
     * @param string $Description
     * @return $this
     */
    public function setDescription($Description)
    {
        $this->Description = $Description;
        return $this;
    }

    /**
     * @return string
     */
    public function getDescription()
    {
        return $this->Description;
    }

    /**
     * @param string $EndDate
     * @return $this
     */
    public function setEndDate($EndDate)
    {
        $this->EndDate = $EndDate;
        return $this;
    }

    /**
     * @return string
     */
    public function getEndDate()
    {
        return $this->EndDate;
    }

    /**
     * @param string $NameOfDay
     * @return $this
     */
    public function setNameOfDay($NameOfDay)
    {
        $this->NameOfDay = $NameOfDay;
        return $this;
    }

    /**
     * @return string
     */
    public function getNameOfDay()
    {
        return $this->NameOfDay;
    }

    /**
     * @param string $OpenFrom
     * @return $this
     */
    public function setOpenFrom($OpenFrom)
    {
        $this->OpenFrom = $OpenFrom;
        return $this;
    }

    /**
     * @return string
     */
    public function getOpenFrom()
    {
        return $this->OpenFrom;
    }

    /**
     * @param string $OpenTo
     * @return $this
     */
    public function setOpenTo($OpenTo)
    {
        $this->OpenTo = $OpenTo;
        return $this;
    }

    /**
     * @return string
     */
    public function getOpenTo()
    {
        return $this->OpenTo;
    }

    /**
     * @param string $StartDate
     * @return $this
     */
    public function setStartDate($StartDate)
    {
        $this->StartDate = $StartDate;
        return $this;
    }

    /**
     * @return string
     */
    public function getStartDate()
    {
        return $this->StartDate;
    }

    /**
     * @param StoreHourType|string $StoreHourtype
     * @return $this
     * @throws InvalidEnumException
     */
    public function setStoreHourtype($StoreHourtype)
    {
        if ( ! $StoreHourtype instanceof StoreHourType ) {
            if ( StoreHourType::isValid( $StoreHourtype ) )
                $StoreHourtype = new StoreHourType( $StoreHourtype );
            elseif ( StoreHourType::isValidKey( $StoreHourtype ) )
                $StoreHourtype = new StoreHourType( constant( "StoreHourType::$StoreHourtype" ) );
            elseif ( ! $StoreHourtype instanceof StoreHourType )
                throw new InvalidEnumException();
        }
        $this->StoreHourtype = $StoreHourtype->getValue();

        return $this;
    }

    /**
     * @return StoreHourType
     */
    public function getStoreHourtype()
    {
        return $this->StoreHourtype;
    }

    /**
     * @param string $StoreId
     * @return $this
     */
    public function setStoreId($StoreId)
    {
        $this->StoreId = $StoreId;
        return $this;
    }

    /**
     * @return string
     */
    public function getStoreId()
    {
        return $this->StoreId;
    }

    /**
     * @param StoreHourOpeningType|string $Type
     * @return $this
     * @throws InvalidEnumException
     */
    public function setType($Type)
    {
        if ( ! $Type instanceof StoreHourOpeningType ) {
            if ( StoreHourOpeningType::isValid( $Type ) )
                $Type = new StoreHourOpeningType( $Type );
            elseif ( StoreHourOpeningType::isValidKey( $Type ) )
                $Type = new StoreHourOpeningType( constant( "StoreHourOpeningType::$Type" ) );
            elseif ( ! $Type instanceof StoreHourOpeningType )
                throw new InvalidEnumException();
        }
        $this->Type = $Type->getValue();

        return $this;
    }

    /**
     * @return StoreHourOpeningType
     */
    public function getType()
    {
        return $this->Type;
    }


}

