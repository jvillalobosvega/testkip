<?php

namespace Bananacode\Kipping\Plugin\Api;

use Magento\Sales\Api\Data\OrderExtensionFactory;
use Magento\Sales\Api\Data\OrderInterface;
use Magento\Sales\Api\Data\OrderSearchResultInterface;
use Magento\Sales\Api\OrderRepositoryInterface;

/**
 * Class OrderRepository
 * @package Bananacode\Kip\Plugin\Api
 */
class OrderRepository
{
    const LATITUDE = 'address_latitude';

    const LONGITUDE = 'address_longitude';

    const DELIVERY = 'kipping_delivery';

    /**
     * Order Extension Attributes Factory
     *
     * @var OrderExtensionFactory
     */
    protected $extensionFactory;

    /**
     * OrderRepositoryPlugin constructor
     *
     * @param OrderExtensionFactory $extensionFactory
     */
    public function __construct(OrderExtensionFactory $extensionFactory)
    {
        $this->extensionFactory = $extensionFactory;
    }

    /**
     * Add "coords" extension attribute to order data object to make it accessible in API data
     *
     * @param OrderRepositoryInterface $subject
     * @param OrderInterface $order
     *
     * @return OrderInterface
     */
    public function afterGet(OrderRepositoryInterface $subject, OrderInterface $order)
    {
        $extensionAttributes = $order->getExtensionAttributes();
        $extensionAttributes = $extensionAttributes ?? $this->extensionFactory->create();

        $latitude = $order->getData(self::LATITUDE);
        $longitude = $order->getData(self::LONGITUDE);
        $delivery = $order->getData(self::DELIVERY);

        $extensionAttributes->setAddressLatitude($latitude);
        $extensionAttributes->setAddressLongitude($longitude);
        $extensionAttributes->setKippingDelivery($delivery);

        $order->setExtensionAttributes($extensionAttributes);

        return $order;
    }

    /**
     * Add "coords" extension attribute to order data object to make it accessible in API data
     *
     * @param OrderRepositoryInterface $subject
     * @param OrderSearchResultInterface $searchResult
     *
     * @return OrderSearchResultInterface
     */
    public function afterGetList(OrderRepositoryInterface $subject, OrderSearchResultInterface $searchResult)
    {
        $orders = $searchResult->getItems();

        foreach ($orders as &$order) {
            $extensionAttributes = $order->getExtensionAttributes();
            $extensionAttributes = $extensionAttributes ?? $this->extensionFactory->create();

            $latitude = $order->getData(self::LATITUDE);
            $longitude = $order->getData(self::LONGITUDE);
            $delivery = $order->getData(self::DELIVERY);

            $extensionAttributes->setAddressLatitude($latitude);
            $extensionAttributes->setAddressLongitude($longitude);
            $extensionAttributes->setKippingDelivery($delivery);

            $order->setExtensionAttributes($extensionAttributes);
        }

        return $searchResult;
    }
}
